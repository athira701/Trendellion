<%- include('../partials/admin/header1') %>

<section class="content-main">
    <div class="content-header mb-4">
        <div>
            <h2 class="content-title card-title">Return Orders</h2>
            <p class="text-muted">View all return orders</p>
        </div>
    </div>

    <div class="card">
        <header class="card-header">
            <div class="row gx-3">
                <div class="col-lg-4 col-md-6 me-auto">
                    <!-- Placeholder for future search or filter -->
                </div>
            </div>
        </header>

        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle text-center">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 10%;">Order ID</th>
                            <th>Status</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Total Amount</th>
                            <th style="width: 15%;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (orders.length > 0) { %>
                            <% orders.forEach(order => { %>
                                <tr>
                                    <td><%= order.orderId %></td>
                                    <td>
                                        <span class="badge bg-danger">
                                            <%= order.orderStatus %>
                                        </span>
                                    </td>
                                    <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                                    <td><%= order.userId ? order.userId.name : 'Unknown User' %></td>
                                    <td>₹<%= order.totalAmount %></td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <button class="btn btn-success btn-sm mb-2 approve-btn" data-id="<%= order._id %>">
                                                Approve
                                            </button>
                                            <button class="btn btn-danger btn-sm reject-btn" data-id="<%= order._id %>">
                                                Reject
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="bg-light">
                                    <td colspan="6" class="px-3">
                                        <div class="d-flex flex-wrap">
                                            <% order.orderedItems.forEach(item => { %>
                                                <div class="d-flex align-items-center me-4 mb-2">
                                                    <img src="/uploads/<%= item.product.productImage[0] %>" 
                                                        alt="Product" 
                                                        class="img-fluid rounded me-3" 
                                                        style="width: 50px; height: 50px; object-fit: cover;">
                                                    <div>
                                                        <p class="mb-1 fw-bold"><%= item.product.productName %></p>
                                                        <small>₹<%= item.price %> x <%= item.quantity %> (Size: <%= item.size %>)</small>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        </div>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center text-muted py-4">
                                    <i class="bi bi-box"></i> No returned orders found.
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <% if (totalPages > 1) { %>
        <div class="pagination-area mt-4">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <% if (currentPage > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" aria-label="Previous">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    <% } %>
                    
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                        </li>
                    <% } %>
                    
                    <% if (currentPage < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" aria-label="Next">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    <% } %>
</section>

<%- include('../partials/admin/footer') %>  

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Select all approve buttons
    const approveButtons = document.querySelectorAll('.approve-btn');
    
    // Add click event listener to each button
    approveButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Get the order ID from the button's data attribute
            const orderId = this.getAttribute('data-id');
            
            // Use SweetAlert for better UX, matching the reject button style
            Swal.fire({
                title: 'Approve Return Request',
                text: 'Are you sure you want to approve this return request?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, approve it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading indicator
                    Swal.fire({
                        title: 'Processing...',
                        text: 'Please wait while we process your request',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    
                    // Make the fetch request
                    fetch(`/admin/approveReturnOrder/${orderId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                          
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => Promise.reject(err));
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Handle success
                        Swal.fire({
                            title: 'Success!',
                            text: data.message || 'Return request approved successfully!',
                            icon: 'success',
                            confirmButtonColor: '#28a745'
                        }).then(() => {
                            // Reload the page to reflect changes
                            window.location.reload();
                        });
                    })
                    .catch(error => {
                        // Handle error
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Failed to approve return request',
                            icon: 'error',
                            confirmButtonColor: '#d33'
                        });
                    });
                }
            });
        });
    });
    
 
    
    // Keep the existing reject button code
    document.addEventListener('click', function(event) {
        if (event.target.classList.contains('reject-btn')) {
            const orderId = event.target.getAttribute('data-id');
            Swal.fire({
                title: 'Reject Return Request',
                text: 'Are you sure you want to reject this return request?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, reject it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/admin/reject-return/${orderId}`;
                }
            });
        }
    });
});

</script>