<%- include('../partials/admin/header1') %>

<div class="container-fluid">
    <form id="editProductForm" enctype="multipart/form-data" method="POST">
        <section class="content-main">
            <div class="row">
                <!-- Left Column: Product Details -->
                <div class="col-lg-9">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                    </div>
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="mb-4">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" name="productName"
                                    value="<%= product.productName %>"  
                                   >
                            </div>
                            <div class="row gx-3">
                                <div class="col-md-4 mb-3">
                                    <label for="price" class="form-label">regularPrice</label>
                                    <input type="number" class="form-control" id="price" name="price"
                                        value="<%= product.regularPrice %>" required min="0">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="price" class="form-label">salePrice</label>
                                    <input type="number" class="form-control" id="sPrice" name="sPrice"
                                        value="<%= product.salePrice %>" required min="0">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="color" class="form-label">Color</label>
                                    <input type="text" class="form-control" id="color" name="color"
                                        value="<%= product.color %>" required  >
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="number" class="form-control" id="quantity" name="quantity"
                                        value="<%= product.quantity %>" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-body">
                            <label for="formdescription" class="form-label">Description</label>
                            <textarea placeholder="Type here" class="form-control" rows="4"
                            name="description" id="formdescription" required><%= product.description %></textarea>
                               
                        </div>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <% for (let i = 0; i < 4; i++) { %>
                                    <div class="image-upload-container">
                                        <label for="image<%= i+1 %>" class="form-label">
                                            <img id="preview<%= i+1 %>" 
                                                src="/uploads/<%= (product.productImage && product.productImage[i]) ? product.productImage[i] : 'placeholder.jpg' %>" 
                                                alt="Product Image <%= i+1 %>" 
                                                style="max-width: 200px; max-height: 200px;">
                                        </label>
                                        <input type="file" class="form-control image-input" id="image<%= i+1 %>" 
                                            name="cropImages" data-index="<%= i %>" style="display: none;">
                                        <button type="button" class="btn btn-secondary mt-2"
                                            onclick="document.getElementById('image<%= i+1 %>').click();">
                                            Upload Image
                                        </button>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Right Column: Category & Status -->
                <div class="col-lg-3">
                    <div class="card mb-4">
                        <div class="card-body">
                            <label class="form-label">Status</label>
                            <select class="form-select" name="visibility" id="formvisibility">
                                <option value="active" <%= product.visibility === 'active' ? 'selected' : '' %>>Active</option>
                                <option value="inactive" <%= product.visibility === 'inactive' ? 'selected' : '' %>>Inactive</option>
                            </select>
                        </div>
                    </div>
                    <div class="card-body">
                        <label for="categoryId" class="form-label">Category</label>
                        <select name="categoryId" id="categoryId" class="form-select">
                            <% if (selectedCategory) { %>
                                <option value="<%= selectedCategory._id %>" selected>
                                    <%= selectedCategory.name %>
                                </option>
                            <% } else { %>
                                <option disabled selected>Select categories</option>
                            <% } %>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>" 
                                    <%= selectedCategory && selectedCategory._id === category._id ? 'selected' : '' %>>
                                    <%= category.name %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    
                </div>
            </div>

            <!-- Submit Button -->
            <div class="container mt-3">
                <div id="addproductError" class="text-danger mb-3"></div>
                <button type="submit" class="btn btn-primary">Update Product</button>
                <input type="hidden" id="id" name="id" value="<%= product._id %>">
            </div>
        </section>
    </form>
    <!-- Image Crop Modal -->
    <div class="modal fade" id="imageCropModal" tabindex="-1" aria-labelledby="imageCropModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageCropModalLabel">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <img id="imageToCrop" src="" alt="Crop this image" style="max-width: 100%;">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="cropImageBtn">Crop</button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/admin/footer') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById('editProductForm');
        form.addEventListener('submit', function (e) {
            e.preventDefault();
            const formData = new FormData(form);
            
            const productId = document.getElementById('id').value;
            const color = document.getElementById('color').value
            const categoryId = document.getElementById('categoryId').value;
            
            const colorPattern = /^[A-Za-z][A-Za-z\s]{1,}$/;
            if (!colorPattern.test(color)) {
               Swal.fire({
                   icon: 'error',
                   title: 'Invalid Color',
                   text: 'Color must contain only alphabets and start with a letter.'
               });
               return;
           }
            if(!categoryId) {
                Swal.fire({
                    icon: 'error',
                    title: 'Category Required',
                    text: 'Please provide a category'
                })
                return
            }
            axios.post(`/admin/editProduct/${productId}`, formData, {
                headers: { 'Content-Type': 'multipart/form-data' }
            })
            .then(response => {
                if (response.data.success) {
                    // Use the redirectUrl from the server response
                    Swal.fire({
                        icon: 'success',
                        title: 'Product Updated',
                        text: 'The product has been updated successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        // Redirect after closing Swal
                        window.location.href = response.data.redirectUrl;
                    });
                } else {
                    //document.getElementById('addproductError').textContent = response.data.message;
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        text: response.data.message,
                    })
                }
            })
            .catch(error => {
                console.error(error);
                Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.response?.data?.message || 'An unexpected error occurred',
            });
                //document.getElementById('addproductError').textContent = 
                 //   error.response?.data?.message || 'An unexpected error occurred';
            });
        });

        let cropper  
    
        // Image preview functionality
        document.querySelectorAll('.image-input').forEach(input => {
            input.addEventListener('change', function(event) {
                const file = event.target.files[0];
                const index = event.target.getAttribute("data-index");
                const preview = document.getElementById(`preview${parseInt(index) + 1}`);

                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result; 

                        const image = document.getElementById('imageToCrop');
                        image.src = e.target.result;
                        $('#imageCropModal').modal('show');

                        if (cropper) {
                            cropper.destroy();
                        }

                        cropper = new Cropper(image, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 1,
                            responsive: true,
                            cropBoxResizable: false,
                        });
                        document.getElementById('cropImageBtn').onclick = function(){
                            const croppedCanvas = cropper.getCroppedCanvas();
                            const croppedImage = croppedCanvas.toDataURL('image/jpeg');

                            preview.src = croppedImage;
                            $('#imageCropModal').modal('hide');

                            const formData = new FormData();
                            formData.append("productId", "<%= product._id %>"); // Send product ID
                            formData.append("imageIndex", index); // Send image index
                            formData.append("image", dataURLtoFile(croppedImage, `cropped_image_${index}.jpg`)); // Send image file

                            fetch('/admin/update-product-image', {
                                method: 'POST',
                                body: formData
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (!data.success) {
                                    console.error("Error updating image:", data.message);
                                } else {
                                    console.log("Image updated successfully")
                                    preview.src = `/uploads/${data.updatedImage[imageIndex]}`;
                                }
                            })
                            .catch(err => console.error("Upload error:", err));
                        }    
                    };
                    reader.readAsDataURL(file);
                }
            });
        });
        function dataURLtoFile(dataurl, filename) {
            const arr = dataurl.split(',');
            const mime = arr[0].match(/:(.*?);/)[1];
            const bstr = atob(arr[1]);
            let n = bstr.length;
            const u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], filename, { type: mime });
        }
    });
    </script>