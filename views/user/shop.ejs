
<!-- views/shop.ejs -->
<%-include('../../views/partials/user/header')%>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            padding: 20px;
            background-color: #fff;
        }

        .shop-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .sort-dropdown {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .product-card {
            background: #fff;
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.2s;
        }

        .product-card:hover {
            transform: translateY(-5px);
        }

        .product-image {
            width: 100%;
            height: 300px;
            object-fit: cover;
        }

        .product-info {
            padding: 15px;
        }

        .product-title {
            font-size: 16px;
            margin-bottom: 8px;
            color: #333;
        }

        .rating {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }

        .stars {
            color: #ffd700;
            margin-right: 5px;
        }

        .price-container {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .current-price {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        .original-price {
            font-size: 16px;
            color: #999;
            text-decoration: line-through;
        }

        .discount-badge {
            background: #ff4444;
            color: white;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 12px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 30px;
        }

        .pagination button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background: #fff;
            cursor: pointer;
            border-radius: 4px;
        }

        .pagination button.active {
            background: #333;
            color: #fff;
        }

        @media (max-width: 768px) {
            .product-grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            }

            .product-image {
                height: 250px;
            }
        }

        @media (max-width: 480px) {
            .product-grid {
                grid-template-columns: 1fr;
            }
        }
        .notification {
    background-color: #4CAF50;
    color: white;
    padding: 16px;
    border-radius: 4px;
    margin-bottom: 10px;
    animation: slideIn 0.3s ease-out;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

@keyframes slideIn {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

.wishlist-btn.active {
    color: #ef4444;
}
    </style>
</head>
<body>
    <div class="shop-header">
        <h1>Home > Shop</h1>
        <select class="sort-dropdown" id="sort-select">
            <option value="newest" <%= currentSort === 'newest' ? 'selected' : '' %>>New Arrivals</option>
            <option value="popular" <%= currentSort === 'popular' ? 'selected' : '' %>>Most Popular</option>
            <option value="price-low" <%= currentSort === 'price-low' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="price-high" <%= currentSort === 'price-high' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="featured" <%= currentSort === 'featured' ? 'selected' : '' %>>Featured</option>
            <option value="name-asc" <%= currentSort === 'name-asc' ? 'selected' : '' %>>Name: A to Z</option>
            <option value="name-desc" <%= currentSort === 'name-desc' ? 'selected' : '' %>>Name: Z to A</option>
        </select>
    </div>
    <% if (locals.searchTerm && locals.searchTerm.length > 0) { %>
        <p class="mb-4 text-gray-600">
            Showing <%= products.length %> results for "<%= searchTerm %>"
        </p>
    <% } %>
          
        <!-- Product Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <% let count = 0; %>
            <% products.forEach(product => { %>
                <% if (count <= 12) { %>
                    <div class="product-card shadow-lg rounded-lg overflow-hidden transition-transform transform hover:scale-105">
                        <!-- Product Image -->
                        <div class="relative">
                            <img src="/uploads/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="w-full h-64 object-cover">
                            <span class="absolute top-2 left-2 bg-red-500 text-white text-sm px-2 py-1 rounded">-40%</span>
                            <div class="absolute top-2 right-2 flex flex-col space-y-2">
                                <!-- <button class="wishlist-btn action-button bg-white text-gray-700 rounded-full p-2 hover:text-red-500 transition-colors"
                                data-product-id="<%= product._id %>"
                                onclick="handleWishlist(event, this)">                                    
                                ‚ô°                           
                            </button>
                                <button class="action-button bg-white text-gray-700 rounded-full p-2 hover:text-blue-500 transition-colors">
                                    üëÅ
                                </button> -->
                            </div>
                        </div>

                        <!-- Product Info -->
                        <a href="/product/<%= product._id %>" class="block p-4">
                            <h3 class="font-semibold text-lg text-gray-800 truncate"><%= product.productName %></h3>
                            <div class="flex items-center justify-between mt-2">
                                <span class="text-lg font-bold text-green-600">‚Çπ<%= product.salePrice %></span>
                                <span class="text-sm line-through text-gray-500">‚Çπ<%= product.regularPrice %></span>
                            </div>
                            <div class="flex items-center mt-2">
                                <!-- <span class="text-yellow-500">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
                                <span class="text-sm text-gray-500 ml-2">(88 reviews)</span> -->
                            </div>
                        </a>
                        <div class="mb-8 ">
                            <label for="size-select" class="block text-gray-700 font-medium mb-2">Select Size</label>
                            <select id="size-select" name="size" class="w-1/4 border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-pink-300 focus:border-transparent bg-white">
                                <% if (product && product.stock && product.stock.length > 0) { %>
                                    <% product.stock.forEach(function(stock) { %>
                                      <option value="<%= stock.size %>"><%= stock.size %></option>
                                    <% }); %>
                                  <% } else { %>
                                    <option value="">N/A</option>
                                  <% } %>
                                  
                                  
                            </select>
                        </div>

                        <!-- Add to Cart Button -->
                        <div class="p-4">
                            <input type="hidden" name="quantity" id="quantity-input" value="1">
                            <%if(locals.user){%>
                            <button class="add-to-cart-button w-full bg-pink-500 text-white py-2 rounded hover:bg-gray-800 transition-colors"  data-product-id="<%= product._id %>">
                                Add to Cart
                            </button>
                            <%}else{%>
                                <button onclick="showLoginAlert()" class="add-to-cart-button w-full bg-pink-500 text-white py-2 rounded hover:bg-gray-800 transition-colors"  data-product-id="<%= product._id %>">
                                    Add to Cart
                                </button>
                                <%}%>    
                        </div>
                    </div>
                    <% count++; %>
                <% } %>
            <% }) %>
        </div>
        <div id="notification-container" class="fixed top-20 right-4 z-50"></div>
        <!-- Pagination -->
        <% if (locals.totalPages > 1) { %>
            <div class="flex justify-center items-center space-x-2 mt-8">
                <% if (currentPage > 1) { %>
                    <a href="/shop?page=<%= currentPage - 1 %><%= locals.searchTerm ? `&search=${searchTerm}` : '' %>&sort=<%= currentSort %>" 
                       class="px-4 py-2 border rounded hover:bg-gray-100">
                        Previous
                    </a>
                <% } %>
        
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <a href="/shop?page=<%= i %><%= locals.searchTerm ? `&search=${searchTerm}` : '' %>&sort=<%= currentSort %>"
                       class="px-4 py-2 border rounded <%= currentPage === i ? 'bg-pink-500 text-white' : 'hover:bg-gray-100' %>">
                        <%= i %>
                    </a>
                <% } %>
        
                <% if (currentPage < totalPages) { %>
                    <a href="/shop?page=<%= currentPage + 1 %><%= locals.searchTerm ? `&search=${searchTerm}` : '' %>&sort=<%= currentSort %>"
                       class="px-4 py-2 border rounded hover:bg-gray-100">
                        Next
                    </a>
                <% } %>
            </div>
        <% } %>
</div>
        
<script>
    function showLoginAlert() {
        Swal.fire({
            title: 'Login Required',
            text: 'Please login first',
            icon: 'info',
            confirmButtonText: 'OK'
        })
    }
    </script>
   

<script>
        // Example products data structure for reference
        const productsData = {
            products: [
                {
                    title: "Gradient Graphic T-shirt",
                    image: "/images/product1.jpg",
                    rating: 4.5,
                    reviews: 150,
                    currentPrice: 145,
                    originalPrice: null
                },
                {
                    title: "Black Striped T-shirt",
                    image: "/images/product2.jpg",
                    rating: 4.8,
                    reviews: 220,
                    currentPrice: 120,
                    originalPrice: 150
                }
                // Add more products as needed
            ],
            currentPage: 1,
            totalPages: 10
        };
        document.addEventListener("DOMContentLoaded", () => {

            const sortSelect = document.getElementById('sort-select');
            if (sortSelect) {
                sortSelect.addEventListener('change', (e) => {
                    const currentUrl = new URL(window.location.href);
                    currentUrl.searchParams.set('sort', e.target.value);
                
                // Reset to page 1 when sorting changes
                    currentUrl.searchParams.set('page', '1');
                
                    window.location.href = currentUrl.toString();
                });
            }
            // Select all "Add to Cart" buttons
            const addToCartButtons = document.querySelectorAll(".add-to-cart-button");

            addToCartButtons.forEach(button => {
                button.addEventListener("click", async event => {
                    event.preventDefault();
                    const productId = button.getAttribute("data-product-id");
                    const sizeSelect = button.closest(".product-card").querySelector("#size-select");
                    const selectedSize = sizeSelect ? sizeSelect.value : null;

                    if (!selectedSize || selectedSize === "N/A") {
                        await Swal.fire({
                            title: "Size Required",
                            text: "Please select a valid size before adding to cart.",
                            icon: "warning",
                            confirmButtonText: "OK"
                        });
                        return;
                    }
                    try {
                button.disabled = true; // Disable button while processing
                button.textContent = "Adding...";

                const response = await fetch(`/addToCart/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        quantity: 1,
                        size: sizeSelect.value
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    // Success message with correct SweetAlert syntax
                    await Swal.fire({
                        title: "Success!",
                        text: "Product added to cart successfully",
                        icon: "success",
                        confirmButtonText: "OK"
                    });

                    // Update button appearance
                    button.classList.remove("bg-pink-500");
                    button.classList.add("bg-gray-500");
                    button.textContent = "Added to Cart";
                    button.disabled = true;

                    // Update cart count if you have a cart counter element
                    const cartCount = document.querySelector(".cart-count");
                    if (cartCount && data.cartItemCount) {
                        cartCount.textContent = data.cartItemCount;
                    }
                } else {
                    throw new Error(data.message || "Failed to add to cart");
                }
            } catch (error) {
                // Reset button state
                button.disabled = false;
                button.textContent = "Add to Cart";
                button.classList.remove("bg-gray-500");
                button.classList.add("bg-pink-500");

                // Error message with correct SweetAlert syntax
                await Swal.fire({
                    title: "Error!",
                    text: error.message || "Failed to add item to cart. Please try again.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
            }
        });
    });
    async function handleWishlist(event, button) {
        event.preventDefault();
        
        const productCard = button.closest('.product-card');
        const productId = button.dataset.productId;
        const sizeSelect = productCard.querySelector('#size-select');
        const selectedSize = sizeSelect.value;

        if (!selectedSize) {
            await Swal.fire({
                title: "Size Required",
                text: "Please select a size before adding to wishlist",
                icon: "warning",
                confirmButtonText: "OK"
            });
            return;
        }

        try {
            const response = await fetch('/addToWishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId,
                    selectedSize
                })
            });

            const data = await response.json();

            if (data.success) {
                button.innerHTML = '‚ù§Ô∏è';
                button.classList.add('active');
                //added now
                button.dataset.selectedSize = selectedSize
                await Swal.fire({
                    title: "Success!",
                    text: "Product added to wishlist!",
                    icon: "success",
                    confirmButtonText: "OK"
                });
            } else {
                await Swal.fire({
                    title: "Notice",
                    text: data.message || 'Failed to add to wishlist',
                    icon: "info",
                    confirmButtonText: "OK"
                });
            }
        } catch (error) {
            console.error('Wishlist operation failed:', error);
            await Swal.fire({
                title: "Error!",
                text: "Failed to update wishlist",
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    }

    // Add global handleWishlist function
    window.handleWishlist = handleWishlist;

    // Check Wishlist Status
    async function checkWishlistStatus() {
        try {
            const response = await fetch('/getWishlist');
            const data = await response.json();
            
            if (data.success && data.wishlist) {
                const wishlistItems = data.wishlist.items;
                const wishlistButtons = document.querySelectorAll('.wishlist-btn');
                
                wishlistButtons.forEach(button => {
                    const productId = button.dataset.productId;
                    
                    const isInWishlist = wishlistItems.some(item => 
                        item.productId === productId
                    );
                    
                    if (isInWishlist) {
                        button.innerHTML = '‚ù§Ô∏è';
                        button.classList.add('active');
                    }
                });
            }
        } catch (error) {
            console.error('Failed to check wishlist status:', error);
        }
    }

    // Initialize wishlist status
    checkWishlistStatus();
});



</script>
</body>
</html>
<%-include('../../views/partials/user/footer')%>