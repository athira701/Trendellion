<%-include('../../views/partials/user/header')%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .checkout-container {
            max-width: 1500px;
            margin: 2rem auto;
            background-color: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .btn-change, .btn-add-address {
            background-color:#e75480;
            color: white;
        }
        .order-summary {
            background-color: #f1f3f5;
            padding: 1rem;
            border-radius: 8px;
        }
        .total-row {
            font-weight: bold;
        }
        /* .coupon-btn {
            background-color: black;
            color: white;
        } */
        .btn-outline-secondary:hover{
            background-color: #e75480;
        }

        .coupon-section {
      background-color: var(--primary-light);
      border-radius: var(--border-radius);
      padding: 20px;
      margin: 25px 0;
      position: relative;
      overflow: hidden;
    }
    
    .coupon-section::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background-color: var(--primary-color);
    }
    
    .coupon-input {
      display: flex;
      gap: 10px;
      align-items: center;
    }
    
    .coupon-input input {
      flex: 1;
      padding: 12px 15px;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      font-size: 14px;
      transition: var(--transition);
      background-color: white;
      box-shadow: var(--shadow-sm);
    }
    
    .coupon-input input:focus {
      border-color: var(--primary-color);
      outline: none;
      box-shadow: 0 0 0 3px  #e75480;
    }
    
    .coupon-input button, .removeCoupon {
      padding: 12px 20px;
      background-color: var(--primary-color);
      color: white;
      font-weight: 600;
      border: none;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: var(--transition);
      text-transform: uppercase;
      letter-spacing: 0.5px;
      font-size: 14px;
    }
    
    .coupon-input button:hover {
      background-color: var(--secondary-color);
      transform: translateY(-2px);
      box-shadow: 0 4px 10px  #e75480;
    }
    
    #couponMessage {
      margin-top: 10px;
      font-weight: 500;
      color: var(--danger-color);
    }
    
    .applied-coupon {
      margin-top: 15px;
      display: flex;
      align-items: center;
      gap: 50px;
    }
    
    #appliedCoupon {
      background-color: var(--success-color);
      color: white;
      padding: 2px 8px;
      border-radius:8px;
      font-size: 14px;
      font-weight: 600;
      display: inline-block;
    }
    
    .removeCoupon {
      background-color: var(--danger-color);
      padding: 5px 10px;
      font-size: 12px;
    }
    
    .removeCoupon:hover {
      background-color: #d93b58;
    }
    .order-total {
      margin-top: 25px;
      padding-top: 20px;
      border-top: 2px dashed var(--border-color);
      text-align: right;
    }
    
    .order-total h3 {
      font-size: 22px;
      font-weight: 700;
      color: var(--text-primary);
      margin: 0;
    }
    .coupon-input {
        flex-direction: column;
    }
      
    .coupon-input input, .coupon-input button {
        width: 100%;
    }

    #applyCouponButton {
        color:  #e75480;
    }

    #viewCouponsButton {
    margin-left: 10px;
    background-color:  #e75480;
    color: #ffffff;
    border: 1px solid #ddd;
    padding: 6px 5px;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s;
  }
  
 
  .coupon-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 50%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
  }
  
  .coupon-modal-content {
    background-color: #fff;
    margin: 10% auto;
    padding: 20px;
    border-radius: 8px;
    width: 80%;
    max-width: 600px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    position: relative;
  }
  
  .close-modal {
    position: absolute;
    top: 10px;
    right: 15px;
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }
  
  .close-modal:hover {
    color: #333;
  }
  
  .coupon-card {
    border: 1px dashed #ddd;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #f8f9fa;
    transition: all 0.3s;
  }
  
  .coupon-card:hover {
    border-color: #e75480;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }
  
  .coupon-info {
    flex: 1;
  }
  
  .coupon-code {
    font-weight: bold;
    color:  #e75480;
    font-size: 18px;
    margin-bottom: 5px;
  }
  
  .coupon-description {
    color: #666;
    margin-bottom: 5px;
  }
  
  .coupon-valid-until {
    font-size: 12px;
    color: #999;
  }
  
  .use-coupon-btn {
    background-color:  #e75480;
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s;
  }
  
  .use-coupon-btn:hover {
    background-color: #e75480;
  }
  
  .loading-coupons {
    text-align: center;
    color: #666;
    padding: 20px;
  }
  
  .no-coupons {
    text-align: center;
    color: #666;
    padding: 20px;
  }
  @media (max-width: 768px) {
      .content-wrapper {
        padding: 20px 15px;
      }

      .coupon-input {
        flex-direction: column;
      }
      .coupon-input input, .coupon-input button {
        width: 100%;
      }
  }
    </style>
</head>
<body>
    <div class="container">
        <div class="checkout-container">
            <div class="row">
                <div class="col-md-7 pe-md-4">
                    <h4 class="mb-4">SHIPPING ADDRESS</h4>
                
                    <% if (defaultAddress) { %>
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <p class="mb-1 fw-bold">Default Address</p>
                                <p class="mb-1"><%= defaultAddress.name %></p>
                                <p class="mb-1"><%= defaultAddress.landMark %></p>
                                <p class="mb-1"><%= defaultAddress.city %>, <%= defaultAddress.state %> <%= defaultAddress.pincode %></p>
                                <p class="mb-1">Phone: <%= defaultAddress.phone %>, <%= defaultAddress.altPhone %></p>
                            </div>
                            <button class="btn btn-change btn-sm" onclick="window.location.href='/addresses'">Change</button>
                        </div>
                    <% } else { %>
                        <p>No address found. Please add an address.</p>
                    <% } %>
                
                    <button class="btn btn-add-address w-100 mt-2" onclick="window.location.href='/addresses'">+ Add New Address</button>
                </div>
                
                <div class="col-md-5">
                    <h4 class="mb-4">YOUR ORDER</h4>
                    <div class="order-summary">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Products</span>
                            <span>Total</span>
                        </div>
                    
                        <% if (cartItems.length > 0) { %>
                            <% cartItems.forEach(item => { %>
                                <div class="d-flex justify-content-between mb-2">
                                    <span><%= item.name %> × <%= item.quantity %></span>
                                    <span>₹<%= item.total %></span>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p>Your cart is empty.</p>
                        <% } %>
                    
                        <hr>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal</span>
                            <span>₹<%= subtotal.toFixed(2) %></span>
                        </div>
                        
                       
                    
                        <div class="d-flex justify-content-between mb-2">
                            <span>Delivery Charge</span>
                            <span>₹<%= deliveryFee.toFixed(2) %></span>
                        </div>
                    
                        <hr>
                        <div class="d-flex justify-content-between total-row">
                            <span>Total</span>
                            <span>₹<%= totalAmount.toFixed(2) %></span>
                        </div>
                    </div>
                    
                    </div>
                    <!-- <button class="btn coupon-btn w-100 mt-3">Apply Coupon</button> -->
                    <div class="coupon-section">
                        <h4>Apply Coupon</h4>
                        <div class="coupon-input">
                          <input type="text" id="couponCode" placeholder="Enter your coupon code" />
                          <button id="applyCouponButton">Apply</button>
                          <button id="viewCouponsButton" type="button">Available Coupons</button>
                        </div>
                        <p id="couponMessage"></p>
                        <div class="applied-coupon">
                          <div>Coupon Applied: <span id="appliedCoupon"></span></div>
                          <form action="/removeCoupon" method="POST" id="removeCouponForm" style="display: none;">
                            <button type="submit" class="removeCoupon">Remove</button>
                          </form>
                        </div>
                      </div>

                      <!-- Add this at the bottom of your page, before the end of body tag -->
                      <div id="couponsModal" class="coupon-modal">
                          <div class="coupon-modal-content">
                            <span class="close-modal">&times;</span>
                            <h2>Available Coupons</h2>
                            <div class="coupons-container" id="couponsContainer">
                              <!-- Coupons will be displayed here -->
                              <p class="loading-coupons">Loading available coupons...</p>
                            </div>
                          </div>
                        </div>
                        <div class="order-total">
                            <h3>Total: ₹<span id="totalAmount"><%= (cart.discountedTotal || cart.cartTotal).toFixed(2) %></span></h3>
                        </div>
                    
                    <div class="payment-methods mt-3">
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cod">
                            <label class="form-check-label" for="cod">Cash on Delivery</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="online">
                            <label class="form-check-label" for="online">Online Payment</label>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row mt-4">
                <div class="col-6">
                    <button class="btn btn-outline-secondary w-100" onclick="window.location.href='/cart'">Return to Cart</button>
                </div>
                <div class="col-6">
                    <button class="btn btn-success w-100" onclick="placeOrder()">Place Order</button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
   function placeOrder() {
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
    if (!paymentMethod) {
        alert('Please select a payment method');
        return;
    }

    Swal.fire({
        title: 'Confirm Order',
        text: 'Are you sure you want to place this order?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#e75480',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, place order',
        cancelButtonText: 'Cancel'
    }).then(async (result) => {
        if (result.isConfirmed) {
            const orderButton = document.querySelector('.btn-success');
            orderButton.disabled = true;
            orderButton.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Processing...';

            try {
                if (paymentMethod.value === 'online') {
                    
                    const response = await fetch('/createRazorpayOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({amount: '<%= totalAmount %>' })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        const options = {
                            key: 'rzp_test_LNdBmP64vR1Tz8',
                            amount: data.order.amount,
                            currency: data.order.currency,
                            order_id: data.order.id,
                            name: 'Trendellion',
                            description: 'Purchase from Trendellion',
                            handler: function(response) {
                                
                                fetch('/orderPlaced', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        paymentMethod: 'ONLINE',
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_signature: response.razorpay_signature
                                    })
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        window.location.href = '/placedOrder';
                                    } else {
                                        throw new Error(data.message);
                                    }
                                });
                            },
                            modal: {
                                ondismiss: function() {
                                    orderButton.disabled = false;
                                    orderButton.innerHTML = 'Place Order';
                                }
                            },
                            prefill: {
                                name: '<%= defaultAddress?.name %>',
                                contact: '<%= defaultAddress?.phone %>'
                            }
                        };

                        const rzp = new Razorpay(options);
                        rzp.open();
                    } else {
                        throw new Error('Failed to create payment order');
                    }
                } else {
                    
                    const response = await fetch('/orderPlaced', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            paymentMethod: 'COD'
                        })
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        window.location.href = '/placedOrder';
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error.message || 'An error occurred while placing your order'
                });
                orderButton.disabled = false;
                orderButton.innerHTML = 'Place Order';
            }
        }
    });
}

const viewCouponsButton = document.getElementById('viewCouponsButton');
    const couponsModal = document.getElementById('couponsModal');
    const closeModal = document.querySelector('.close-modal');
    const couponsContainer = document.getElementById('couponsContainer');
    

    viewCouponsButton.addEventListener('click', function() {
        couponsModal.style.display = 'block';
        fetchAvailableCoupons();
    });
        closeModal.addEventListener('click', function() {
        couponsModal.style.display = 'none';
    });
    
  
    window.addEventListener('click', function(event) {
        if (event.target === couponsModal) {
            couponsModal.style.display = 'none';
        }
    });
    

    async function fetchAvailableCoupons() {
        try {
            const response = await fetch('/availableCoupons');
            const result = await response.json();
            
            if (result.success && result.coupons.length > 0) {
                displayCoupons(result.coupons);
            } else {
                couponsContainer.innerHTML = '<p class="no-coupons">No coupons available at this time.</p>';
            }
        } catch (error) {
            console.error('Error fetching coupons:', error);
            couponsContainer.innerHTML = '<p class="no-coupons">Failed to load coupons. Please try again.</p>';
        }
    }
    
   
    function displayCoupons(coupons) {
        couponsContainer.innerHTML = '';
        
        coupons.forEach(coupon => {
            const couponCard = document.createElement('div');
            couponCard.className = 'coupon-card';
            
            //const validUntil = new Date(coupon.validUntil).toLocaleDateString();
            
            couponCard.innerHTML = `
                <div class="coupon-info">
                    <div class="coupon-code">${coupon.code}</div>
                    <div class="coupon-description">${coupon.description}</div>
                    <div class="coupon-valid-until">Valid until: ${coupon.validUntil}</div>
                </div>
                <button class="use-coupon-btn" data-coupon="${coupon.code}">Use</button>
            `;
            
            couponsContainer.appendChild(couponCard);
        });
        

        document.querySelectorAll('.use-coupon-btn').forEach(button => {
            button.addEventListener('click', function() {
                const couponCode = this.getAttribute('data-coupon');
                document.getElementById('couponCode').value = couponCode;
                couponsModal.style.display = 'none';           
                document.getElementById('applyCouponButton').click();
            });
        });
    }

    const applyCouponButton = document.getElementById('applyCouponButton');
    const couponCodeInput = document.getElementById('couponCode');
    const couponMessage = document.getElementById('couponMessage');
    const appliedCoupon = document.getElementById('appliedCoupon');
    const removeCouponForm = document.getElementById('removeCouponForm');

    let couponApplied = false; 

    applyCouponButton.addEventListener('click', async function() {
        const couponCode = couponCodeInput.value.trim();
        if (!couponCode) {
            Swal.fire({
                text: 'Enter a coupon!',
                icon: 'warning',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
            return;
        }

        try {
            const response = await fetch('/applyCoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode })
            });

            const result = await response.json();
            if (result.success) {
                appliedCoupon.textContent = couponCode;
                Swal.fire({
                    text: result.message || 'Coupon applied successfully!',
                    icon: 'success',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
                removeCouponForm.style.display = 'block';
                document.getElementById('totalAmount').textContent = result.newTotal;
                couponApplied = true;
            } else {
                Swal.fire({
                    text: result.message || 'Failed to apply coupon',
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            Swal.fire({
                text: 'An error occurred while applying the coupon.',
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }

    });
    // Handle remove coupon
    removeCouponForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        try {
            const response = await fetch('/removeCoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const result = await response.json();
            if (result.success) {
                appliedCoupon.textContent = ''; // Clear applied coupon
                Swal.fire({
                    text: 'Coupon removed successfully!',
                icon: 'success',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
                });
                removeCouponForm.style.display = 'none'; 
                document.getElementById('totalAmount').textContent = result.newTotal;
                couponApplied = false; 
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message, 
                });
            }
        } catch (error) {
            console.error('Error removing coupon:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while removing the coupon.',
            });
        }
    });

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>
<%-include('../../views/partials/user/footer')%>